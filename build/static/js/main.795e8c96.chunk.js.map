{"version":3,"sources":["components/HomeComponent.js","components/ListComponent.js","components/CountComponent.js","components/SearchComponent.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["HomeComponent","ListComponent","useState","content","setContent","useEffect","a","fetch","rec","json","data","map","ele","name","fetchData","className","key","Math","random","CountComponent","SearchCard","response","console","log","length","hidden","item","region","battle_type","attacker_king","attacker_1","attacker_commander","defender_king","defender_1","defender_commander","SearchComponent","props","searchStates","e","setState","search","target","value","matches","filter","state","regex","RegExp","match","this","document","getElementById","then","res","items","location","replace","decodeURI","type","id","placeholder","aria-describedby","onChange","floor","onClick","changeVal","to","Component","NavBar","App","Navbar","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.795e8c96.chunk.js","sourcesContent":["import  React  from \"react\";\n\nconst HomeComponent = () => {\n    return (\n        <div>\n            <h1>you are at the Home component</h1>\n        </div>\n    )\n}\n\nexport default HomeComponent;","import React, { useState, useEffect } from \"react\";\n\nconst ListComponent = () => {\n  const [content, setContent] = useState([]);\n  const [loader, setLoader] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      const rec = await fetch(\"/api/list\");\n      const data = await rec.json();\n      setContent(\n        data.map((ele) => {\n          return ele.name;\n        })\n      );\n    }\n    fetchData();\n    //   .then((items) => setItems(items))\n    //   .then(setLoader(false))\n    //   .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div className=\"container-fluid\">\n      {content.map((ele) => (\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card text-white bg-info mb-3\"></div>\n\n            <div className=\"card-block\">\n              <div className=\"card-title\">\n                <h4 key={Math.random()}>{ele}</h4>\n              </div>\n              <br />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ListComponent;\n","import React, { useState,useEffect }  from \"react\";\n\nconst CountComponent = () => {    \n\n    return (\n        <div>\n            <h1>There are total 38 battles</h1>\n        </div>\n    )\n}\n\nexport default CountComponent;","import React, { useState, Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst SearchCard = (response) => {\n  console.log(response.response.length);\n  return (\n    <div className=\"card-group\">\n      {response.hidden === true && response.response.length > 0 &&\n        response.response.map((item) => {\n          return (\n            <div className=\"card\">\n              <div className=\"textbox p-3 bg-secondary text-black\">\n              <h4 className=\"card-title text-center\">{item.name}</h4>\n              <div className=\"parentbox\">\n              <div className=\"card-title\"><p>Battle Region : <br/>{item.region}</p></div>\n              <div className=\"card-title\"><p>Battle Type:<br/>{item.battle_type ? item.battle_type : \"NA\" }</p></div>\n              </div>\n              </div>\n              <div className=\"card-body parentbox  p-3 bg-dark text-white\">\n                <div className=\"leftbox\">\n                  <p>Attack Side:<br/>\n                  {item.attacker_king} <br/>\n                  {item.attacker_1} <br/>\n                  {item.attacker_commander}\n                  </p>\n                </div>\n                <div className=\"rightBox\">\n                  <p>\n                    Defense Side: <br/>\n                  {item.defender_king} <br/>\n                  {item.defender_1} <br />\n                  {item.defender_commander}\n                  </p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nclass SearchComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      response: [],\n      hidden: false,\n    };\n  }\n\n  searchStates = (e) => {\n    this.setState({ hidden: false });\n    let search = e.target.value;\n\n    const prediction = [\n      \"Castle Black\",\n      \"Crag\",\n      \"Darry\",\n      \"Deepwood Motte\",\n      \"Dragonstone\",\n      \"Duskendale\",\n      \"Golden Tooth\",\n      \"Green Fork\",\n      \"Harrenhal\",\n      \"King's Landing\",\n      \"Moat Cailin\",\n      \"Mummer's Ford\",\n      \"Oxcross\",\n      \"Raventree\",\n      \"Red Fork\",\n      \"Riverrun\",\n      \"Ruby Ford\",\n      \"Ryamsport, Vinetown, Starfish Harbor\",\n      \"Saltpans\",\n      \"Seagard\",\n      \"Shield Islands\",\n      \"Stony Shore\",\n      \"Storm's End\",\n      \"The Twins\",\n      \"Torrhen's Square\",\n      \"Whispering Wood\",\n      \"Winterfell\",\n    ];\n\n    let matches = prediction.filter((state) => {\n      const regex = new RegExp(`^${search}`, \"gi\");\n\n      return state.match(regex);\n    });\n\n    if (search.length === 0) {\n      matches = [];\n    }\n\n    this.setState({ data: matches });\n    console.log(matches);\n  };\n\n  changeVal(item) {\n    this.setState({ hidden: true });\n    var s = document.getElementById(\"search\");\n    s.value = item;\n\n    // CALL API\n    fetch(`/api/search?location=${item}`)\n      .then((res) => res.json())\n      .then((items) => this.setState({ response: items }));\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    let item = location.search.replace(\"?location=\", \"\");\n    var s = document.getElementById(\"search\");\n    s.value = decodeURI(item);\n\n    fetch(`/api/search?location=${item}`)\n      .then((res) => res.json())\n      .then((items) => this.setState({ response: items }));\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        <div className=\"row\">\n          <div className=\"col-md-6 m-auto\">\n            <h3 className=\"text-center mb-3\">\n              <i className=\"fas-fa-flag-usa\"></i>\n              Search For Location\n            </h3>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"\"\n                id=\"search\"\n                className=\"form-control form-control-lg\"\n                placeholder=\"Enter Location\"\n                aria-describedby=\"helpId\"\n                onChange={(e) => this.searchStates(e)}\n              />\n            </div>\n            <div>\n              <div>\n                {!this.state.hidden &&\n                  this.state.data.map((item) => {\n                    return (\n                      <div\n                        key={Math.floor(Math.random() * 100)}\n                        className=\"card card-body mb-1\"\n                      >\n                        <Link\n                          onClick={() => this.changeVal(item)}\n                          to={`/search?location=${item}`}\n                        >\n                          {\" \"}\n                          <h4>{item}</h4>\n                        </Link>\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n          </div>\n        </div>\n        <SearchCard\n          key={Math.floor(Math.random() * 100)}\n          response={this.state.response}\n          hidden={this.state.hidden}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchComponent;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n      <Link to=\"/search\" className=\"navbar-brand\">\n        Search\n      </Link>\n      <div className=\"collapse navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"navbar-item\">\n          <Link to=\"/list\" className=\"nav-link\">\n              List\n            </Link>\n            \n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/count\" className=\"nav-link\">\n              Count\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport HomeComponent from \"./components/HomeComponent\";\nimport ListComponent from \"./components/ListComponent\";\nimport CountComponent from \"./components/CountComponent\";\nimport SearchComponent from \"./components/SearchComponent\";\nimport Navbar from \"./components/Navbar\";\nfunction App() {\n \n  return(\n    <Router>\n      <div className=\"container\">\n      <Navbar />\n        <br/>\n        <Route path=\"/\" exact component={HomeComponent} />\n        <Route path=\"/list\" exact component={ListComponent} />\n        <Route path=\"/count\" exact component={CountComponent} />\n        <Route path=\"/search\" exact component={SearchComponent} />\n      </div>\n    </Router>\n  )\n  \n\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}